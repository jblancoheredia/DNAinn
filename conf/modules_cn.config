/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Available keys to override module options:
            ext.args   = Additional arguments appended to command in module.
            ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
            ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
            ext.prefix = File name prefix for output files.
-------------------------------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'ONCOCNV' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/oncocnv/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BCFTOOLS_MPILEUP' {
        ext.args   = { '--ignore-RG --max-depth 10000 -Ou -f ' }
        ext.args2  = { '-mv -Ov -o ' }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/bcftools/mpileup/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_MPILEUP' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/samtools/mpileup/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CONTROLFREEC_OT_FREEC' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/controlfreec/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CONTROLFREEC_OT_ASSESSSIGNIFICANCE' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/controlfreec/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CONTROLFREEC_OT_FREEC2BED' {
        ext.args   = { "${params.cf_ploidy}" }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/controlfreec/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CONTROLFREEC_OT_FREEC2CIRCOS' {
        ext.args   = { "${params.cf_ploidy}" }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/controlfreec/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CNVKIT_BATCH' {
        ext.args   = { params.wes ? "--method hybrid --diagram --scatter" : "--method wgs --diagram --scatter" }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/cnvkit/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CNVKIT_CALL' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/cnvkit/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CNVKIT_EXPORT' {
        ext.args = "vcf"
        ext.prefix = { "${meta.id}.cnvcall" }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/cnvkit/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CNVKIT_GENEMETRICS' {
        ext.prefix = { "${cnr.baseName}.genemetrics" }
        publishDir = [
            path: { "${params.outdir}/copynumberalt/cnvkit/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FACETS_CNV' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/facets/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SEQUENZA_SEQZ' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/sequenza/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SEQUENZAUTILS_BAM2SEQZ' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/sequenzautils/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SEQUENZA_FITS' {
        publishDir = [
            path: { "${params.outdir}/copynumberalt/sequenza/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/preprocessing/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}