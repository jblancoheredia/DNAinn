{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/jblancoheredia/dnainn/master/nextflow_schema.json",
    "title": "jblancoheredia/dnainn pipeline parameters",
    "description": "MSKCC-CMO-Innovation DNA-seq analysis pipeline --> DNAinn is a comprehensive DNA-seq analysis pipeline Nextflow implemented and nf-core modular executed for the analysis of DNA-seq data. It is designed to be highly flexible and can be run on a wide range of computing environments, from a single laptop, to a computing cluster or cloud computing environments. This pipeline was created using nf-core policies and tools.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 12,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "dnainn_subworkflows": {
            "title": "DNAinn pipeline custom options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for subworkflows",
            "properties": {
                "run_downsamplings": {
                    "type": "boolean",
                    "description": "To run or not Downsampling Steps",
                    "fa_icon": "fas fa-book",
                    "help_text": "Usefull for cap all samples in the run with the same number of reads (the smallest sample and million rounded)"
                },
                "downsampling_total_reads": {
                    "type": "boolean",
                    "description": "Bypass the automatic counting to stablish an specific number of reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Usefull for cap all samples in the run with the same number of reads user defined"
                },                
                "run_umiprocessing": {
                    "type": "boolean",
                    "description": "To run or not UMI procedding step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_dedupandrecal": {
                    "type": "boolean",
                    "description": "To run or not DeDuplication&ReCallibration procedding step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_variantdscvry": {
                    "type": "boolean",
                    "description": "To run or not this step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_strctrlvarnts": {
                    "type": "boolean",
                    "description": "To run or not this step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_immunoncology": {
                    "type": "boolean",
                    "description": "To run or not this step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_telomerefeats": {
                    "type": "boolean",
                    "description": "To run or not this step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                },
                "run_copynumberalt": {
                    "type": "boolean",
                    "description": "To run or not this step",
                    "fa_icon": "fas fa-book",
                    "help_text": "Controls the subworkflows to be run"
                }
            }
        },
        "dnainn_copynumberalt": {
            "title": "DNAinn pipeline custom options (copynumberalt)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when copynumberalt",
            "properties": {
                "mappability": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Mappability file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Some steps requirement"
                }
            }
        },
        "dnainn_variantdscvry": {
            "title": "DNAinn pipeline custom options (variantdscvry)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when variantdscvry",
            "properties": {
                "intervals": {
                    "type": "string",
                    "format": "file-path",
                    "description": "MSK ACCESSv1 & ACCESSv2 intervals file",
                    "fa_icon": "fas fa-book",
                    "help_text": "MSK ACCESSv1 & ACCESSv2 intervals file with 1K padding"
                }
            }
        },
        "dnainn_general_params": {
            "title": "DNAinn pipeline custom options (umis_by_fgbio)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when umis_by_fgbio",
            "properties": {
                "save_reference": {
                    "type": "boolean",
                    "description": "Make the references available for posterior runs",
                    "fa_icon": "fas fa-book",
                    "help_text": "Usefull if running in closed systems, like the clinical server"
                },
                "seq_center": {
                    "type": "string",
                    "description": "Where the sample were sequenced",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequencing facility name. For MSKCC, this is usually IGO"
                },
                "seq_library": {
                    "type": "string",
                    "description": "Library used for the sequencing",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequencing library name and version. Options are: Av1 and Av2."
                },
                "seq_type": {
                    "type": "string",
                    "description": "DNA/RNA",
                    "fa_icon": "fas fa-book",
                    "help_text": "Obviously this is DNA."
                },
                "seq_platform": {
                    "type": "string",
                    "description": "Platform used for the sequencing",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequencing platform name. Usually, but not set as default, ILLUMINA"
                },
                "genome": {
                    "type": "string",
                    "description": "Human genome version",
                    "fa_icon": "fas fa-book",
                    "help_text": "Human genome version to use for alignment. Options are: GRCh37 & GRCh38."
                },
                "refs_dir": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Directory containing reference files",
                    "fa_icon": "fas fa-book",
                    "help_text": "Directory containing reference files for the pipeline. This directory should contain the following subdirectories: `ensembl`, `star`, etc..."
                },
                "genome_base": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Directory containing Human genome files",
                    "fa_icon": "fas fa-book",
                    "help_text": "Directory containing reference files for the pipeline. This directory should contain the following subdirectories: `ensembl`, `star`, etc..."
                },
                "bwa_dragen_hg38": {
                    "type": "string",
                    "format": "file-path",
                    "description": "BWA index directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "BWA index directory for the DRAGEN-like reference."
                },
                "ensembl_ref": {
                    "type": "string",
                    "format": "file-path",
                    "description": "ENSEMBL fasta file",
                    "fa_icon": "fas fa-book",
                    "help_text": " ENSEMBL Human genome fasta to use for alignment."
                },
                "ensembl_version": {
                    "type": "string",
                    "format": "file-path",
                    "description": "ENSEMBL directory",
                    "fa_icon": "fas fa-book",
                    "help_text": " ENSEMBL Human genome version to use for alignment."
                },
                "read_length": {
                    "type": "string",
                    "description": "Library size",
                    "fa_icon": "fas fa-book",
                    "help_text": "Library size of the reads."
                },
                "gtf": {
                    "type": "string",
                    "description": "GTF file",
                    "fa_icon": "fas fa-book",
                    "help_text": "GTF file to use for alignment."
                },
                "fasta": {
                    "type": "string",
                    "description": "Fasta file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Fasta file to use for alignment."
                },
                "fai": {
                    "type": "string",
                    "description": "Fai file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Fai file to use for alignment."
                },
                "chrgtf": {
                    "type": "string",
                    "description": "Chromosome GTF file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Chromosome GTF file to use for alignment."
                },
                "refflat": {
                    "type": "string",
                    "description": "RefFlat file",
                    "fa_icon": "fas fa-book",
                    "help_text": "RefFlat file to use for alignment."
                },
                "chromosomes": {
                    "type": "string",
                    "description": "Chromosomes lenght file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Chromosomes lenght file to use for alignment."
                },
                "known_sites": {
                    "type": "string",
                    "description": "SNP DB file",
                    "fa_icon": "fas fa-book",
                    "help_text": "SNPs data base."
                },
                "known_sites_tbi": {
                    "type": "string",
                    "description": "SNP DB index file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Index"
                },
                "hgnc_ref": {
                    "type": "string",
                    "description": "HGNC DB file",
                    "fa_icon": "fas fa-book",
                    "help_text": "HGNC data base file to use for alignment."
                },
                "hgnc_date": {
                    "type": "string",
                    "description": "hgnc_date file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Timestamp of the HGNC data base compilation"
                },
                "hsmetrics_baits": {
                    "type": "string",
                    "description": "Baits file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Baits file specific for picky Picard"
                },
                "hsmetrics_trgts": {
                    "type": "string",
                    "description": "Targets file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Targets file specific for picky Picard"
                },
                "dict": {
                    "type": "string",
                    "description": "Dict file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Dict file to use for alignment."
                },
                "chr6_fa": {
                    "type": "string",
                    "description": "chr6_hla_fa file",
                    "fa_icon": "fas fa-book",
                    "help_text": "chr6_hla_fa file to use for alignment."
                },
                "chr6_fai": {
                    "type": "string",
                    "description": "chr6_hla_fai file",
                    "fa_icon": "fas fa-book",
                    "help_text": "chr6_hla_fai file to use for alignment."
                },
                "imgt_fa": {
                    "type": "string",
                    "description": "imgt_hla_fa file",
                    "fa_icon": "fas fa-book",
                    "help_text": "imgt_hla_fa file to use for alignment."
                },
                "imgt_fai": {
                    "type": "string",
                    "description": "imgt_hla_fai file",
                    "fa_icon": "fas fa-book",
                    "help_text": "imgt_hla_fai file to use for alignment."
                },
                "bwa2_chr6": {
                    "type": "string",
                    "description": "chr6_hla bwa2 index",
                    "fa_icon": "fas fa-book",
                    "help_text": "chr6_hla bwa2 index to use for alignment."
                },
                "bwa2_imgt": {
                    "type": "string",
                    "description": "imgt_hla bwa2 index",
                    "fa_icon": "fas fa-book",
                    "help_text": "imgt_hla bwa2 index to use for alignment."
                },
                "bwa": {
                    "type": "string",
                    "description": "BWA index",
                    "fa_icon": "fas fa-book",
                    "help_text": "BWA index to use for alignment."
                },
                "bwa2": {
                    "type": "string",
                    "description": "BWA2 index",
                    "fa_icon": "fas fa-book",
                    "help_text": "BWA2 index to use for alignment."
                },
                "pon_directory": {
                    "type": "string",
                    "description": "Directory for the Panel Of Normals",
                    "fa_icon": "fas fa-book",
                    "help_text": "Directory for the Panel Of Normals to use for Gridss."
                },
                "group_strategy": {
                    "type": "string",
                    "description": "Method to perform groupping",
                    "fa_icon": "fas fa-book",
                    "help_text": "DNA is paired and RNA is adjancency"
                },
                "call_min_reads": {
                    "type": "string",
                    "description": "Call min reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call min reads to use for alignment."
                },
                "call_min_baseq": {
                    "type": "string",
                    "description": "Call min baseq",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call min baseq to use for alignment."
                },
                "call_error_rate_pre_umi": {
                    "type": "integer",
                    "description": "Error rate pre UMI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call error rate pre UMI asigment to use for calling."
                },
                "call_error_rate_post_umi": {
                    "type": "integer",
                    "description": "Error rate post UMI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call error rate post UMI asigment to use for calling."
                },
                "transcripts": {
                    "type": "string",
                    "description": "CDNA transcript file",
                    "fa_icon": "fas fa-book",
                    "help_text": "CDNA transcript file to use for alignment."
                },
                "wigfile20": {
                    "type": "string",
                    "description": "GCbin20",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequenza wig GCbin file at 20."
                },
                "wigfile50": {
                    "type": "string",
                    "description": "GCbin50",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequenza wig GCbin file at 50."
                },
                "wigfile100": {
                    "type": "string",
                    "description": "GCbin100",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequenza wig GCbin file at 100."
                },
                "baits": {
                    "type": "string",
                    "description": "Baits bed file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Baits file in BED format specific for the panel."
                },
                "baits_bed": {
                    "type": "string",
                    "description": "Baits bed file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Baits file in BED format specific for the panel."
                },
                "kraken2db": {
                    "type": "string",
                    "description": "Kraken DB",
                    "fa_icon": "fas fa-book",
                    "help_text": "Path to the directory where Kraken's database is located."
                },
                "rep_regions": {
                    "type": "string",
                    "description": "Repeats regions",
                    "fa_icon": "fas fa-book",
                    "help_text": "File with the localization of repetitive regions in the genome"
                },
                "targets": {
                    "type": "string",
                    "description": "Targets bed file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Targets file in BED format specific for the panel."
                },
                "targets_bed": {
                    "type": "string",
                    "description": "Targets bed file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Targets file in BED format specific for the panel."
                },
                "msi_list": {
                    "type": "string",
                    "description": "Fasta file specific for MSI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Input for MSIsensorPRO."
                },
                "interval_list": {
                    "type": "string",
                    "description": "Targets bed file sorted and in list format",
                    "fa_icon": "fas fa-book",
                    "help_text": "Targets BED file sorted and in specific format for the panel."
                },
                "intervals_bed_gunzip": {
                    "type": "string",
                    "description": "Targets bed file sorted in list format and compressed",
                    "fa_icon": "fas fa-book",
                    "help_text": "Targets BED file sorted and in specific format for the panel."
                },
                "intervals_bed_gunzip_index": {
                    "type": "string",
                    "description": "Index of targets bed file sorted in list format and compressed",
                    "fa_icon": "fas fa-book",
                    "help_text": "Index of targets BED file sorted and in specific format for the panel."
                },
                "drawsv_chr": {
                    "type": "string",
                    "description": "Chromosomes file for DrawSV.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Chromosomes file for DrawSV."
                },
                "chr_fai": {
                    "type": "string",
                    "description": "Index file for chrgtf",
                    "fa_icon": "fas fa-book",
                    "help_text": "Index file of chrgtf file."
                },
                "f2b_umi_qual_tag": {
                    "type": "string",
                    "description": "Tag to use to allocate the UMI quality",
                    "fa_icon": "fas fa-book",
                    "help_text": "Defaults to QX"
                },
                "f2b_umi_tag": {
                    "type": "string",
                    "description": "Tag to use to allocate the UMI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Defaults to RX"
                },
                "f2b_read_structure": {
                    "type": "string",
                    "description": "Of vital importance, describes how the UMIs are located in the structure of the reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "In the case of Av1 & Av2 the UMI have the following structure 3M2S+T 3M2S+T"
                },
                "correct_max_mismatch": {
                    "type": "integer",
                    "description": "Max mismatch when correcting UMIs",
                    "fa_icon": "fas fa-book",
                    "help_text": "Depending on the UMI structure, being 0 equal to no mismatches"
                },
                "correct_min_distance": {
                    "type": "integer",
                    "description": "Minimal distance between mismatches when correcting UMIs",
                    "fa_icon": "fas fa-book",
                    "help_text": "Depending on the UMI structure, being 0 equal to no distance"
                },
                "correct_min_corrected": {
                    "type": "number",
                    "description": "Minimal passed proportion of reads after correcting UMIs",
                    "fa_icon": "fas fa-book",
                    "help_text": "Minimal passed proportion as float between 0 and 1 of reads after correcting UMIs"
                },
                "group_edits": {
                    "type": "integer",
                    "description": "How many bases are permited to be diferent?",
                    "fa_icon": "fas fa-book",
                    "help_text": "Grouping stage"
                },
                "group_min_map_q": {
                    "type": "integer",
                    "description": "Min mapping quality to perform groupping",
                    "fa_icon": "fas fa-book",
                    "help_text": "Should be an integer, set to 0 to ignore the parameter"
                },
                "group_mark_duplicates": {
                    "type": "boolean",
                    "description": "Perform mark duplicate reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "The method is different than Picard"
                },
                "group_include_secondary": {
                    "type": "boolean",
                    "description": "Include or not secondary reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to false except when marking duplicates"
                },
                "group_include_supplementary": {
                    "type": "boolean",
                    "description": "Include or not supplementary reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to false except when marking duplicates"
                },
                "group_include_non_pf_reads": {
                    "type": "boolean",
                    "description": "Include or not pf reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Filtered fails reads and defaults to false"
                },
                "group_allow_inter_contig": {
                    "type": "boolean",
                    "description": "Allow or not paired reads mapped to different chromosomes",
                    "fa_icon": "fas fa-book",
                    "help_text": "It will be removed soon, defaults now to True"
                },
                "filter_min_reads": {
                    "type": "number",
                    "description": "Min of reads need it in each contig",
                    "fa_icon": "fas fa-book",
                    "help_text": "Min of reads need it in each contig, defaults to 1"
                },
                "filter_min_base_quality": {
                    "type": "number",
                    "description": "Min quality per each base",
                    "fa_icon": "fas fa-book",
                    "help_text": "Min quality per each base, defaults to 1"
                },
                "msi_baseline_TCGA": {
                    "type": "string",
                    "description": "TCGA baseline",
                    "fa_icon": "fas fa-book",
                    "help_text": "Build for tumour only MSI calculations"
                },
                "banding": {
                    "type": "string",
                    "description": "Path to the banding data",
                    "fa_icon": "fas fa-book"
                },
                "filter_max_base_error_rate": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "filter_max_read_error_rate": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "filter_max_no_call_fraction": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_coeff": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_ploidy": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_mincov": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_window": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_minqual": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_mappability": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_mpileup": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_mpileup_tbi": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_contamination_adjustment": {
                    "type": "boolean",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_contamination": {
                    "type": "number",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cnvkit_reference": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cnvkit_antitarget": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cf_control_mpileup": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "wes": {
                    "type": "boolean",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "pon": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "pon_tbi": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "germres": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "common_vcf": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_con_bam": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_con_bai": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_dup_bam": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_dup_bai": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_sim_bam": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_sim_bai": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_fastq1": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "normal_fastq2": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "annotsv_dir": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "germres_tbi": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "exclude_bed": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "vardict_bed": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "blocklist_bed": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "common_vcf_tbi": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "annotation_genes_bed": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "ilcoan_dir": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "allow_list_genes": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "hlala_graph": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "gatk_interval_list": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "ethnicity": {
                    "type": "string",
                    "description": "Polysolver input, no comments...",
                    "fa_icon": "fas fa-book"
                },
                "optitype_image": {
                    "type": "string",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "cpus": {
                    "type": "integer",
                    "description": "Self explicative...",
                    "fa_icon": "fas fa-book"
                },
                "memory": {
                    "type": "string",
                    "description": "Default memory allocation",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Default memory allocation replaced by modules tags"
                },
                "tools_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Default tools location",
                    "fa_icon": "fas fa-book",
                    "help_text": "Default tools location in the current local machine"
                },
                "cytobands": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Default cytobands file location",
                    "fa_icon": "fas fa-book",
                    "help_text": "Default cytobands file location in the current local machine"
                },
                "annotations": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Default annotations file location",
                    "fa_icon": "fas fa-book",
                    "help_text": "Default annotations file location in the current local machine"
                },
                "protein_domains": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Default protein_domains file location",
                    "fa_icon": "fas fa-book",
                    "help_text": "Default protein_domains file location in the current local machine"
                },
                "allowlist_bed": {
                    "type": "string",
                    "format": "file-path",
                    "description": "BED with the intervals of the allowlist of genes for SVs",
                    "fa_icon": "fas fa-book",
                    "help_text": "Default BED with the intervals of the allowlist of genes for SVs location in the current local machine"
                },
                "by_chr_dir": {
                    "type": "string",
                    "description": "Genomic reference divided by chromosomes",
                    "fa_icon": "fas fa-book",
                    "help_text": "Some parts of the pipeline requirement"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
