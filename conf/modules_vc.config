/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Available keys to override module options:
            ext.args   = Additional arguments appended to command in module.
            ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
            ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
            ext.prefix = File name prefix for output files.
-------------------------------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'FGBIO_CLIPBAM' {
        publishDir = [
            path: { "${params.outdir}/preprocessing/fgbio/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'VARDICTJAVA' {
        ext.args   = { "-c 1 -S 2 -E 3 -g 4 -f 0.001 -Q 10 -r 1 --fisher -C -I 250 -VS SILENT" }
        ext.args2  = { "-A -N ${meta.id} -f 0.001 " }
        ext.prefix = { "${meta.id}.vardict" }
        publishDir = [
            path: { "${params.outdir}/variantdscvry/vardict/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FREEBAYES' {
        ext.args   = { '--min-alternate-fraction 0.001 --min-mapping-quality 10 --pooled-continuous ' }
        publishDir = [
            path: { "${params.outdir}/variantdscvry/freebayes/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_MUTECT2' {
        ext.args   = { "--f1r2-tar-gz ${task.ext.prefix}.f1r2.tar.gz --tumor-lod-to-emit 2.0 --min-base-quality-score 10 " }
        ext.prefix = { meta.num_intervals <= 1 ? "${meta.id}.mutect2" : "${meta.id}.mutect2.${intervals.baseName}" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/mutect2/${meta.id}" },
            pattern: "*{vcf.gz,vcf.gz.tbi,stats}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_LEARNREADORIENTATIONMODEL' {
        ext.prefix = { "${meta.id}.mutect2.artifactprior" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/mutect2/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_GETPILEUPSUMMARIES.*' {
        ext.prefix = { "${meta.id}.mutect2" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/mutect2/${meta.id}" },
            pattern: "*.table",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_CALCULATECONTAMINATION' {
        ext.args   = { "-tumor-segmentation ${meta.id}.mutect2.segmentation.table" }
        ext.prefix = { "${meta.id}.mutect2" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/mutect2/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_FILTERMUTECTCALLS' {
        ext.prefix = {"${meta.id}.mutect2.filtered"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/mutect2/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'LOFREQ' {
        ext.args   = { "--min-cov 2 --tumor-mtc-alpha 0.2 --indel-tumor-mtc-alpha 0.2" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/lofreq/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BCFTOOLS_MERGE' {
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/bcftools/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_HAPLOTYPECALLER' {
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/haplotypecaller/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'VCFCALLS2TSV' {
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variantdscvry/vcfcalls2tsv/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/preprocessing/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}